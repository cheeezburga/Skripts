#cookie clicker - by cheezburga

options:
	prefix: &f&l[&6&lCC&f&l]

	#whether the skript will use vault as its cookie currency
	use-vault: false

on load:
	send "{@prefix} &aLoading cookie data..." to console
	set {buildings::*} to "cursor", "grandma", "farm", "mine", "factory", "bank", "temple", "wizardtower", "shipment", "alchemylab", "portal", "timemachine", "antimattercondenser", "prism", "chancemaker" and "fractalengine"
	if nbt file "plugins/Skript/cookieclicker/buildings.dat" doesn't exist:
		set {_file} to nbt compound of file "plugins/Skript/cookieclicker/buildings.dat"
		set tag "cursor;price" of {_file} to 15
		set tag "cursor;cps" of {_file} to 0.1
		set tag "cursor;item" of {_file} to "iron sword"
		set tag "cursor;name" of {_file} to "Cursor"
		set tag "grandma;price" of {_file} to 100
		set tag "grandma;cps" of {_file} to 1
		set tag "grandma;item" of {_file} to "sugar"
		set tag "grandma;name" of {_file} to "Grandma"
		set tag "farm;price" of {_file} to 1100
		set tag "farm;cps" of {_file} to 8
		set tag "farm;item" of {_file} to "wheat"
		set tag "farm;name" of {_file} to "Farm"
		set tag "mine;price" of {_file} to 12000
		set tag "mine;cps" of {_file} to 47
		set tag "mine;item" of {_file} to "stone"
		set tag "mine;name" of {_file} to "Mine"
		set tag "factory;price" of {_file} to 130000
		set tag "factory;cps" of {_file} to 260
		set tag "factory;item" of {_file} to "iron bars"
		set tag "factory;name" of {_file} to "Factory"
		set tag "bank;price" of {_file} to 1400000
		set tag "bank;cps" of {_file} to 1400
		set tag "bank;item" of {_file} to "gold ingot"
		set tag "bank;name" of {_file} to "Bank"
		set tag "temple;price" of {_file} to 20000000
		set tag "temple;cps" of {_file} to 7800
		set tag "temple;item" of {_file} to "sandstone"
		set tag "temple;name" of {_file} to "Temple"
		set tag "wizardtower;price" of {_file} to 330000000
		set tag "wizardtower;cps" of {_file} to 44000
		set tag "wizardtower;item" of {_file} to "glass bottle"
		set tag "wizardtower;name" of {_file} to "Wizard Tower"
		set tag "shipment;price" of {_file} to 5100000000
		set tag "shipment;cps" of {_file} to 260000
		set tag "shipment;item" of {_file} to "oak boat"
		set tag "shipment;name" of {_file} to "Shipment"
		set tag "alchemylab;price" of {_file} to 75000000000
		set tag "alchemylab;cps" of {_file} to 1600000
		set tag "alchemylab;item" of {_file} to "gold nugget"
		set tag "alchemylab;name" of {_file} to "Alchemy Lab"
		set tag "portal;price" of {_file} to 1000000000000
		set tag "portal;cps" of {_file} to 10000000
		set tag "portal;item" of {_file} to "obsidian"
		set tag "portal;name" of {_file} to "Portal"
		set tag "timemachine;price" of {_file} to 14000000000000
		set tag "timemachine;cps" of {_file} to 65000000
		set tag "timemachine;item" of {_file} to "compass"
		set tag "timemachine;name" of {_file} to "Time Machine"
		set tag "antimattercondenser;price" of {_file} to 170000000000000
		set tag "antimattercondenser;cps" of {_file} to 430000000
		set tag "antimattercondenser;item" of {_file} to "gunpowder"
		set tag "antimattercondenser;name" of {_file} to "Antimatter Condenser"
		set tag "prism;price" of {_file} to 2100000000000000
		set tag "prism;cps" of {_file} to 2900000000
		set tag "prism;item" of {_file} to "glass block"
		set tag "prism;name" of {_file} to "Prism"
		set tag "chancemaker;price" of {_file} to 26000000000000000
		set tag "chancemaker;cps" of {_file} to 21000000000
		set tag "chancemaker;item" of {_file} to "glowstone dust"
		set tag "chancemaker;name" of {_file} to "Chancemaker"
		set tag "fractalengine;price" of {_file} to 310000000000000000
		set tag "fractalengine;cps" of {_file} to 150000000000
		set tag "fractalengine;item" of {_file} to "prismarine shard"
		set tag "fractalengine;name" of {_file} to "Fractal Engine"
		save nbt file of {_file}
	send "{@prefix} &aLoaded cookie data." to console

on tab complete of "/cc" or "/cookieclicker":
	set tab completions for position 1 to "start", "shop", "reset", "delete", "scoreboard" and "stats"
	if tab arg-1 is "start" or "shop" or "reset" or "delete" or "scoreboard":
		set tab completions for position 2 to ""
	else if tab arg-1 is "stats":
		set tab completions for position 2 to all offline players where [isPlaying(input) is true]

function playerFile(p: offline player) :: text:
	return "plugins/Skript/cookieclicker/players/%{_p}%.dat"

function isPlaying(p: offline player) :: boolean:
	set {_c} to true if nbt file playerFile({_p}) exists
	set {_c} to false if nbt file playerFile({_p}) doesn't exist
	if {_c} is true:
		set {_c} to false if nbt compound of file playerFile({_p}) is empty nbt compound
	return {_c}

every 1 second:
	loop all players where [isPlaying(input) is true]:
		ccGive(loop-player)
		ccScoreboard(loop-player, 0)

command /cookieclicker [<text>] [<offline player>]:
	aliases: /cc
	usage: &c/cookieclicker (start | shop | reset | delete | scoreboard | stats)
	trigger:
		if arg-1 is not set:
			send "{@prefix} &cUsage: /cookieclicker (start | shop | reset | delete | scoreboard | stats)"
		else:
			if arg-2 is set:
				if arg-1 is "stats":
					ccStats(arg-2)
				else:
					send "{@prefix} &cOnly the stats command takes a second argument."
			else if arg-2 is not set:
				if arg-1 is "shop" or "upgrades":
					ccShop(player)
				else if arg-1 is "start" or "play":
					ccStart(player)
				else if arg-1 is "scoreboard" or "sb" or "board":
					ccScoreboard(player, 1)
				else if arg-1 is "delete":
					ccDelete(player)
				else if arg-1 is "reset" or "restart":
					ccReset(player, 0)
				else if arg-1 is "stats":
					ccStats(player)
				else:
					send "{@prefix} &cUsage: /cookieclicker (start | shop | reset | delete | scoreboard | stats)"

function ccGive(p: player):
	set {_cps} to getCps({_p})
	set {_file} to nbt compound of file playerFile({_p})
	if {@use-vault} is true:
		add {_cps} to {_p}'s money
	else if {@use-vault} is false:
		add {_cps} to float tag "total" of {_file}
		save nbt file of {_file}

function ccStats(p: offline player):
	if isPlaying({_p}) is true:
		set {_nbt} to pretty nbt from nbt compound of file playerFile({_p})
		send "%{_nbt}%" to {_p}
	else:
		send "{@prefix} &c%{_p}% doesn't have a stats file." to {_p}

on click:
	if player's held item is cookie:
		if name of player's held item is "&6&lCookie Clicker":
			if isPlaying(player) is true:
				cancel event
				send action bar "&6&l+1 cookie" to player
				set {_file} to nbt compound of file playerFile(player)
				add 1 to float tag "total" of {_file}
				save nbt file of {_file}
				ccScoreboard(player, 0)
			else:
				send "{@prefix} &cUse '/cc start' to play."

function ccStart(p: player):
	if isPlaying({_p}) is false:
		send "{@prefix} &aCreating your player file." to {_p}
		set {_file} to nbt compound of file playerFile({_p})
		set float tag "total" of {_file} to 0
		loop {buildings::*}:
			set int tag "buildings;%loop-value%" of {_file} to 0
		save nbt file of {_file}
		send "{@prefix} &aCreated your player file." to {_p}
		toggle {_p}'s scoreboard on
		give 1 cookie named "&6&lCookie Clicker" with lore "&7Right click to get cookies." to {_p}
	else if isPlaying({_p}) is true:
		send "{@prefix} &cYou're already playing, use '/cc reset' if you want to reset." to {_p}

on chat:
	if {cc::%player%::typing} is set:
		cancel event
		if {cc::%player%::typing} is "reset":
			if unformatted message is "yes":
				delete {cc::%player%::typing}
				ccReset(player, 1)
			else if unformatted message is "no":
				delete {cc::%player%::typing}
				send "{@prefix} &aCancelled your bakery reset."
			else:
				send "{@prefix} &aAre you sure you want to reset?"
				send "{@prefix} &aType 'yes' or 'no' in the chat:"

function ccReset(p: player, i: integer):
	if isPlaying({_p}) is true:
		if {_i} is 0:
			set {cc::%{_p}%::typing} to "reset"
			send "{@prefix} &aAre you sure you want to reset?" to {_p}
			send "{@prefix} &aType 'yes' or 'no' in the chat:" to {_p}
		if {_i} is 1:
			delete nbt from file playerFile({_p})
			send "{@prefix} &aReset your cookie clicker account." to {_p}
			ccStart({_p})
	else:
		send "{@prefix} &cYou must be playing to reset your account." to {_p}

function ccDelete(p: player):
	if isPlaying({_p}) is true:
		delete nbt from file playerFile({_p})
		toggle {_p}'s scoreboard off
		send "{@prefix} &aDeleted your cookie clicker data." to {_p}
	else:
		send "{@prefix} &cYou must be playing to delete your account." to {_p}

function ccShop(p: player):
	create gui with virtual chest inventory with 5 rows named "Cookie Shop":
		format gui slot (0,1,2,3,4,5,6,7,8,9,17,18,26,27,28,29,31,33,34,35,36,37,38,39,40,41,42,43,44) with black stained glass pane named "&0"
	open last gui to {_p}
	loop {buildings::*}:
		formatSlot({_p}, loop-value)

function formatSlot(p: player, t: text):
	set {_pfile} to nbt compound of file playerFile({_p})
	set {_bfile} to nbt compound of file "plugins/Skript/cookieclicker/buildings.dat"
	set {_i} to tag "%{_t}%" of {_bfile}
	loop nbt tags of {_i}:
		set {_c%loop-value%} to tag "%{_t}%;%loop-value%" of {_bfile}
	set {_amount} to tag "buildings;%{_t}%" of {_pfile}
	set {_fprice} to ceil({_cprice} * (1.15^{_amount}))
	edit {_p}'s gui:
		format next gui slot with ({_citem} parsed as item) named "&f&l%{_cname}%" with lore "&aPrice: &6$%{_fprice}%", "&aCPS: %{_ccps}%" and "&aYou own: %{_amount}%":
			ccBuy({_p}, {_t}, {_cprice}, {_amount}, gui slot)

function ccBuy(p: player, t: text, price: number, amount: integer, slot: integer):
	set {_file} to nbt compound of file playerFile({_p})
	set {_fprice} to ceil({_price} * (1.15^{_amount}))
	set {_money} to {_p}'s money if {@use-vault} is true
	set {_money} to float tag "total" of {_file} if {@use-vault} is false
	if {_money} < {_fprice}:
		send "{@prefix} &cYou need more money to purchase this." to {_p}
	else if {_money} >= {_fprice}:
		remove {_fprice} from {_p}'s money if {@use-vault} is true
		remove {_fprice} from float tag "total" of {_file} if {@use-vault} is false
		add 1 to int tag "buildings;%{_t}%" of {_file}
		save nbt file of {_file}
		edit {_p}'s gui:
			remove gui slot {_slot}
		formatSlot({_p}, {_t})
		ccScoreboard({_p}, 0)

function getCps(p: offline player) :: number:
	set {_bfile} to nbt compound of file "plugins/Skript/cookieclicker/buildings.dat"
	set {_pfile} to nbt compound of file playerFile({_p})
	set {_cps} to 0
	loop {buildings::*}:
		set {_inc} to tag "%loop-value%;cps" of {_bfile}
		set {_amount} to tag "buildings;%loop-value%" of {_pfile}
		add ({_inc} * {_amount}) to {_cps}
	return {_cps}

function ccScoreboard(p: player, i: integer):
	if isPlaying({_p}) is true:
		if {_i} is 1:
			toggle {_p}'s scoreboard
		if scoreboard of {_p} is on:
			set {_file} to nbt compound of file playerFile({_p})
			set {_cookies} to float tag "total" of {_file}
			set {_cps} to getCps({_p})
			set title of {_p}'s scoreboard to "    &6&lCookie Clicker    "
			set line 15 of {_p}'s scoreboard to ""
			set line 15 of {_p}'s scoreboard to "&6Cookies: &f%{_cookies}%"
			set line 14 of {_p}'s scoreboard to "&6CPS: &f%{_cps}%"
	else:
		send "{@prefix} &cYou must be playing to use the scoreboard." to {_p}